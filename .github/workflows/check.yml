name: check

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  check:
    runs-on: ubuntu-latest

    outputs:
      status: ${{ steps.check-branch.outputs.match }}

    steps:
      - name: install git-email
        run: |
          sudo rm /etc/apt/sources.list.d/git-core-ubuntu-ppa-focal.list
          sudo add-apt-repository ppa:git-core/ppa
          sudo apt-get update
          # sudo apt-get upgrade
          sudo apt-get install git-email -y

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check Branch
        id: check-branch
        run: |
          git fetch
          branch_ignore=(master develop)
          branch_raw=${{ github.ref }}
          branch=${branch_raw#refs/heads/}
          regex="^(feature|bugfix)/task-[0-9]+$"
          email=$(git log -n 1 --pretty=format:%ae)
          
          echo ${{secrets.MAIL}} | base64 -d > ~/.gitconfig
          git config --global user.email "${{secrets.MAIL_USERNAME}}"
          git config --global user.name "github info"
          echo ::set-output name=mail::$email
          echo ::set-output name=branch::$branch

          # branch_ignore contains branch
          if [[ " ${branch_ignore[*]} " =~ " ${branch} " ]]; then
              exit 0
          fi

          if git log --merges origin/master | grep -q "${branch}$"; then
              exit 0
          fi

          # branch regex
          if [[ $branch =~ $regex ]]; then
              exit 0
          fi

          echo ::set-output name=match::false
          exit 1

      - name: Send mail
        if: ${{ failure() }}
        run: |
          echo "Subject: Переименуй ${{ steps.check-branch.outputs.branch }}" > template.msg
          git send-email --to=${{secrets.MAIL_USERNAME}} template.msg

  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: check
    if: needs.check.outputs.status == 'true'

    steps:
      # - name: Checkout repository
      #   uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # - name: deploy
      #   uses: wahyd4/kubectl-helm-action@master
      #   env:
      #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      #     KUBECONFIG: /tmp/config
      #   with:
      #     args: |
      #       helm repo add netology https://88ee55.github.io/netology-helm/
      #       helm upgrade --install app -n app netology/task25 --wait --atomic --set image.tag=${{ steps.meta.outputs.version }}
